const bodyResponse = pm.response.json();

const state = pm.iterationData.get("State");
const country = pm.iterationData.get("CountryCode");

pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Body matches string", function () {
    pm.expect(pm.response.text()).to.include("weather");
});

pm.test("Status code name has string", function () {
    pm.expect(bodyResponse.sys.country).to.equal("US")
    pm.expect(bodyResponse.name).to.equal(state)
    pm.expect(bodyResponse.cod).to.be.equal(200)
});


const schema = {
    "type": "object",
    "properties": {
        "name": { "type": "string" },
        "id": { "type": "integer" },
        "temp": {"type": "float"},
        "temp_min": {"type": "float"},
        "temp_max": {"type": "float"},
    }
};
pm.test('Schema is valid', function () {
    pm.expect(tv4.validate(bodyResponse, schema)).to.be.true;
});
